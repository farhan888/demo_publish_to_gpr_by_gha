name: Publish SDK

on:
  push:
    branches:
      - main  
  release:
    types: [published, edited, created]  # Runs on new GitHub releases
  workflow_dispatch: {}  # Allow manual triggering

jobs:
  publish-github:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: "https://npm.pkg.github.com"

      - name: Install dependencies
        run: npm install

      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || !github.event.release.draft }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org/"
          always-auth: "true"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: npm install

      - id: latest-release
        name: Get latest release tag
        run: |
          echo "latest-release-tag=$(curl -sSL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/releases/latest" \
          | jq -r .tag_name)" >> $GITHUB_OUTPUT

      - id: npm-tag
        name: Determine NPM tag
        env:
          GITHUB_RELEASE_TAG: ${{ github.event.release.tag_name }}
        run: |
          VERSION=$(jq -r '.version' package.json)
          LATEST_RELEASE_TAG="${{ steps.latest-release.outputs['latest-release-tag']}}"
          
          if [[ ${{ github.event_name }} == "workflow_dispatch" ]]; then
            RELEASE_TAG=${GITHUB_REF#refs/tags/}
          else
            RELEASE_TAG=$GITHUB_RELEASE_TAG
          fi

          if [[ $RELEASE_TAG == $LATEST_RELEASE_TAG ]]; then
            echo "npm-tag=latest" >> "$GITHUB_OUTPUT"
          elif [[ "$VERSION" == *"-beta"* ]]; then
            echo "npm-tag=beta" >> "$GITHUB_OUTPUT"
          elif [[ "$VERSION" == *"-alpha"* ]]; then
            echo "npm-tag=alpha" >> "$GITHUB_OUTPUT"
          elif [[ "$VERSION" == *"-rc"* ]]; then
            echo "npm-tag=rc" >> "$GITHUB_OUTPUT"
          else
            echo "npm-tag=v$(echo $VERSION | awk -F. '{print $1}')-latest" >> "$GITHUB_OUTPUT"
          fi

      - id: release
        name: Test, build, and publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ ${{ github.event_name }} == "workflow_dispatch" ]]; then
            DRY_RUN="--dry-run"
          fi
          npm publish --tag=${{ steps.npm-tag.outputs['npm-tag'] }} $DRY_RUN
